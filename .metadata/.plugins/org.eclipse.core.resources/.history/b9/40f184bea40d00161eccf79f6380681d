package Atividade;


import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutput;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.ServerSocket;
import java.net.Socket;
import java.text.Format;

import javax.xml.soap.Text;

public class Server {
	
	
	public static void writeBytesToFile(byte[] bytes) throws IOException {
	      BufferedInputStream bos = null;
	      
	    try {
	      FileInputStream fos = new FileInputStream("salva.txt");
	      bos = new BufferedInputStream(fos); 
	      bos.read(bytes);
	    }finally {
	      if(bos != null) {
	        try  {
	          //flush and close the BufferedOutputStream
	          
	          bos.close();
	        } catch(Exception e){}
	      }
	    }
	    }
	
	

	public static Object toObject (byte[] bytes)
	{
	  Object obj = null;
	  try {
	    ByteArrayInputStream bis = new ByteArrayInputStream (bytes);
	    ObjectInputStream ois = new ObjectInputStream (bis);
	     obj = (Produto) ois.readObject();
	  }
	  catch (IOException ex) {
	    //TODO: Handle the exception
	  }
	  catch (ClassNotFoundException ex) {
	    //TODO: Handle the exception
	  }
	  return obj;
	}
	

	
	public static void main(String[] args) throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, SecurityException, IllegalArgumentException, InvocationTargetException {
		
		String clientSentence;
        String capitalizedSentence;
        String saidaMetodo = "Adicionar";
        
        
        ServerSocket welcomeSocket = new ServerSocket(6789);
        System.out.println("Server rodando esperando dados...");
        while (true){
        	byte[] b = new byte[welcomeSocket.getReceiveBufferSize()];
            
        	Socket conectionSocket = welcomeSocket.accept();
            
        	BufferedInputStream inFromClient = new BufferedInputStream(conectionSocket.getInputStream());
            InputStream stream = conectionSocket.getInputStream();
            DataOutputStream outToClient = new DataOutputStream(
					conectionSocket.getOutputStream());  
			
            inFromClient.read(b);
            Produto produto = (Produto) toObject(b);

            String dir = produto.getNome();
            System.out.println("Escrevendo arquivo " + dir);

            FileOutputStream fos = new FileOutputStream("itemChegou.txt");
            fos.write(b);
            fos.close();
  
            String nomeClasse = "Atividade.MercadoDAO";
            String adiciona = "adicionar";
            String alterar = "Alterar";
            String listar = "listarTudo";
            String remover = "Remover";
        	String parametroAlterar1 = " ";
        	String parametroAlterar2 = " ";
        	String parametroRemover = " ";
            
//            if(saidaMetodo[0].toString().equals("adicionar")){
//                String metodo = saidaMetodo[0];
//                String objeto = saidaMetodo[1];
//            }else if(saidaMetodo[0].toString().equals("listarTudo")){
//            	String metodoListar = saidaMetodo[0];
//            }else if(saidaMetodo[0].toString().equals("remover")){
//            	String metodoRemover = saidaMetodo[0];
//            	parametroRemover = saidaMetodo[1];
//            }else if(saidaMetodo[0].toString().equals("alterar")){
//            	String metodoAlterar = saidaMetodo[0];
//            	parametroAlterar1 = saidaMetodo[1];
//            	parametroAlterar2 = saidaMetodo[2];
//            }

            
            Class classeGenerica = Class.forName(nomeClasse);
            Object obj = classeGenerica.newInstance();
            
            Method metodoAdicionar, metodoAlterar, metodoListar, metodoRemover;
           
     
    		
    		
    		//System.out.println(item1.toString());
    	   
            System.out.print("Operação: ");
           
        	
        	switch (saidaMetodo) {
			case "adicionar":
				Produto item1 = new Produto();
	    		
	    		try{
	    			FileInputStream arqq = new FileInputStream("item.txt");
	    			ObjectInputStream objectIn = new ObjectInputStream(arqq); //abre
	    			
	    			item1 = (Produto) objectIn.readObject();
	    			arqq.close();
	    			objectIn.close();	
	    			
	    		}catch(IOException e){
	    			System.out.println(e.getMessage());
	    			e.printStackTrace();
	    		}
				metodoAdicionar = classeGenerica.getMethod(saidaMetodo.toString(), Produto.class);
				metodoAdicionar.invoke(obj, item1);
            	outToClient.write('\n');
				System.out.println("Chegou adicionar");
				break;
//			case "alterar":
//				metodoAlterar = classeGenerica.getMethod(saidaMetodo[0], String.class, String.class);
//				metodoAlterar.invoke(obj, parametroAlterar1, parametroAlterar2);
//				outToClient.write('\n');
//				System.out.println("Chegou alterar");
//				break;
//			case "listarTudo":
//				metodoListar = classeGenerica.getMethod(saidaMetodo[0].toString());
//				//metodoListar.invoke(obj);
//				outToClient.writeBytes(metodoListar.invoke(obj).toString() + '\n');
//				System.out.println("Chegou listarTudo");
//				break;
//			case "remover":
//				metodoRemover = classeGenerica.getMethod(saidaMetodo[0], String.class);
//				metodoRemover.invoke(obj, parametroRemover);
//				outToClient.write('\n');
//				System.out.println("Chegou remover");
//				break;

				
			default:
				System.out.println("informe uma operação valida");
				break;
			}         
                       
        

	}
        
        

  }
}

